<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wana.fruit.machine.mapper.GameMapConfigMapperExt" >
  <resultMap id="BaseResultMap" type="com.wana.fruit.machine.model.entity.GameMapConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="game_no" property="gameNo" jdbcType="VARCHAR" />
    <result column="no" property="no" jdbcType="INTEGER" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="rate" property="rate" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, game_no, no, icon, rate, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wana.fruit.machine.model.entity.GameMapConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game_map_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from game_map_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from game_map_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wana.fruit.machine.model.entity.GameMapConfigExample" >
    delete from game_map_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wana.fruit.machine.model.entity.GameMapConfig" >
    insert into game_map_config (id, game_no, no, 
      icon, rate, type)
    values (#{id,jdbcType=INTEGER}, #{gameNo,jdbcType=VARCHAR}, #{no,jdbcType=INTEGER}, 
      #{icon,jdbcType=VARCHAR}, #{rate,jdbcType=INTEGER}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wana.fruit.machine.model.entity.GameMapConfig" >
    insert into game_map_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gameNo != null" >
        game_no,
      </if>
      <if test="no != null" >
        no,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gameNo != null" >
        #{gameNo,jdbcType=VARCHAR},
      </if>
      <if test="no != null" >
        #{no,jdbcType=INTEGER},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wana.fruit.machine.model.entity.GameMapConfigExample" resultType="java.lang.Integer" >
    select count(*) from game_map_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update game_map_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gameNo != null" >
        game_no = #{record.gameNo,jdbcType=VARCHAR},
      </if>
      <if test="record.no != null" >
        no = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.rate != null" >
        rate = #{record.rate,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update game_map_config
    set id = #{record.id,jdbcType=INTEGER},
      game_no = #{record.gameNo,jdbcType=VARCHAR},
      no = #{record.no,jdbcType=INTEGER},
      icon = #{record.icon,jdbcType=VARCHAR},
      rate = #{record.rate,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wana.fruit.machine.model.entity.GameMapConfig" >
    update game_map_config
    <set >
      <if test="gameNo != null" >
        game_no = #{gameNo,jdbcType=VARCHAR},
      </if>
      <if test="no != null" >
        no = #{no,jdbcType=INTEGER},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wana.fruit.machine.model.entity.GameMapConfig" >
    update game_map_config
    set game_no = #{gameNo,jdbcType=VARCHAR},
      no = #{no,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>